 Exchange Types in RabbitMq

1 - Fanout Exchange
2 - Direct Exchange
3 - Topic Exchange
4 - Header Exchange

All have different routing 

Exchange : Routes the messages to queues, which are published by the producer(publisher)
Default Exchange  :  Sending messages which are published by the publisher, directly to queues without using exchange

Consumers(subscribers) don't know echange, they connect to queues to read messages

1 - We can have producer to create both the exchange and the queues in some scenarios
or 
2 - we can have producer to create the exchange and consumer to create the queues.


for 1 - since queues are created by the producer, even if the consumers are not up, the messages will reside in exchange and queue, and will remain not deleted
for 2 - if the consumers are not up, the messages will come to exchange and since no queue are created yet, the message will get deleted from not delivering to the queue


1 - Fanout Exchange
--------------------
When producer publishes a message, Fanout exchange sends all messages to all queues bound to itself,  without applying any filter.
If there is a message msg1, fe sends this same msg1 to all queues that bound to itself 1 by 1 for eg.
In this scenario, producer creates the exchange and sends message.  It is consumers job to create queue/s to listen or not.
If no consumer so no queue, no messages willget received, because producer doesn't care here if the message is recewived or not.


2 - Direct Exchange
--------------------
When producer publishes a message, according to the route info, delivers the message to the specific queue. 


3 - Topic Exchange
--------------------
Has more detailed routing structure so when we need more detailed routing scenario ...
RoutingKey consists of dotted statements instead of  plain old string like the others

RouteKey => Critical.Error.Warning
RouteKey => *.Error.* => Containing .Error. inside somewhere
RouteKey => #.Error.  => Ending with Error
RouteKey => Critical.# => Starting with Critical

* > equals one string statement :  *.*.* > 3 strings attached with a dot
# > may be any string statement : #.Error > may be *.*.*.Error or *.Error or *.*.*.*.*.*.*.Error



Topic Exchange - 1st thing subscriber up: binding happens on exchange then producer will send msg or msgs go in vain without a listening subs oz queue created by subs


4 - Header Exchange
--------------------
Routing is stated inside header not by the routeKey.

Producer
---------------------
header => format=pdf
		  shape=a4
				 

Consumers
---------------------
header => format=pdf
		  shape=a4
		  x-match=any  ( =>  all of the key-value should be matching : e.g format=pdf or shape=a4 matching is ok)

				 
header => format=pdf
		  shape=a4
		  x-match=all  ( =>  all of the key-value should be matching : format=pdf and  shape=a4 shpuld match!)




-------------

Uygulama restart olsa da exchange veya queue memoryde deðil fiziksel bir diske kaydedilir ve meswajlar kaybolmaz

Exchange (durable = true)
Queue (durable = true)


Mesajlarý kalýcý hale getirmek??

 var properties = channel.CreateBasicProperties();
 properties.Persistent = true;   ==>>> mesajlar kalýcý olsun



 -------------

 Complext-type nasýl gönderebiliriz?